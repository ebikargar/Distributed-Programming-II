package it.polito.dp2.jaxb;
 
import java.io.FileInputStream;
import java.io.IOException;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;

// import java content classes generated by binding compiler
import it.polito.dp2.jaxb.gen.*;
 
public class Main {
    
    public static void main( String[] args ) {
        try {
            // create a JAXBContext capable of handling the generated classes
            JAXBContext jc = JAXBContext.newInstance( "it.polito.dp2.jaxb.gen" );
            
            // create an Unmarshaller
            Unmarshaller u = jc.createUnmarshaller();
            
            // unmarshal a document into a tree of Java content objects
            Object jaxbElement = u.unmarshal( new FileInputStream( "po.xml" ) );
			JAXBElement<PurchaseOrderType> poe = (JAXBElement<PurchaseOrderType>)jaxbElement;
            PurchaseOrderType po = (PurchaseOrderType)poe.getValue();
            System.out.println("Purchase order correctly extracted");
            // make changes here to the po

            // create a Marshaller and marshal to std out
            Marshaller m = jc.createMarshaller();
            m.setProperty( Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE );
            m.marshal( poe, System.out );
        } catch( JAXBException je ) {
        	System.out.println("Error while unmarshalling or marshalling");
            je.printStackTrace();
            System.exit(1);
        } catch( IOException ioe ) {
            ioe.printStackTrace();
            System.exit(1);
        } catch( ClassCastException cce) {
        	System.out.println("Wrong data type found in XML document");
        	cce.printStackTrace();
            System.exit(1);
        }
    }
}
