package it.polito.dp2.NFFG.sol1;

import it.polito.dp2.NFFG.*;
import it.polito.dp2.NFFG.sol1.jaxb.LinksType;
import it.polito.dp2.NFFG.sol1.jaxb.NffgType;
import it.polito.dp2.NFFG.sol1.jaxb.NffgVerifierType;
import it.polito.dp2.NFFG.sol1.jaxb.NodeType;

import java.io.File;
import java.io.FileNotFoundException;
import java.math.BigInteger;
import java.net.MalformedURLException;
import java.util.*;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;

import org.xml.sax.SAXException;


public class NffgInfoSerializer {

	private static it.polito.dp2.NFFG.sol1.jaxb.NffgVerifierType monitorType;

	private NffgVerifier monitor;
	private static final String SCHEMA_FILE = "xsd" + File.separatorChar + "nffgInfo.xsd";
	private static final String SCHEMA_LOCATION = "http://www.example.org/nffgInfo nffgInfo.xsd";

	public NffgInfoSerializer() throws NffgVerifierException {
		it.polito.dp2.NFFG.NffgVerifierFactory factory = it.polito.dp2.NFFG.NffgVerifierFactory.newInstance();
		monitor = factory.newNffgVerifier();
	}
	
	public static void main(String[] arg){
	
		try{
			NffgInfoSerializer obSer=new NffgInfoSerializer();
			monitorType  = new it.polito.dp2.NFFG.sol1.jaxb.NffgVerifierType();
		
		
		
		
	
		
		
	}
		
	}
	
	
	
	
	
	
	
	
	

	private JAXBElement<NffgVerifierType> build() throws NffgVerifierException { //NffgVerifierException is not attached to any source...
		
		NffgVerifierType NffgVerifierObj = new NffgVerifierType();

		List<NffgType> nffg_List = NffgVerifierObj.getNffg();
		for (NffgReader nffg_r : monitor.getNffgs()) { //why it says NffgReader does not attached to any elements,should we get from monitor or NffgVerifierobj?
		NffgType nffg_type = new NffgType();

			nffg_type.setNffgName(nffg_r.getName());
			nffg_type.setUpTime(convertDate(nffg_r.getUpdateTime()));
			nffg_List.add(nffg_type);
		
			List<NodeType> node_List = nffg_type.getNode();
			for (NodeReader node_r : nffg_r.getNodes()) {
				NodeType nodeType = new NodeType();

//				// ProviderCatType provider_cat = node_r;
//
//				nodeType.setNodeName(node_r.getName());
//				// nodeType.set;
			
			
			
			
			
			List<LinksType> link_List = nffg_type.getLinks();
			for (LinkReader link_r : link_r) {		
		
        //flightSystemObj.setAircrafts(buildAircrafts());
		
		//flightSystemObj.setFlights(buildFlights());

//		NffgVerifierType NffgVerifierObj = new NffgVerifierType();
//		// Read list of the nffg
//		List<NffgType> nffg_List = NffgVerifierObj.getNffg();
//		for (NffgReader nffg_r : monitor.getNffgs()) {
//			NffgType nffg_type = new NffgType();
//
//			nffg_type.setNffgName(nffg_r.getName());
//			nffg_type.setUpTime(convertDate(nffg_r.getUpdateTime()));
//			nffg_List.add(nffg_type);
//
//			// Read list of the node
//			List<NodeType> node_List = nffg_type.getNode();
//			for (NodeReader node_r : nffg_r.getNodes()) {
//				NodeType nodeType = new NodeType();
//
//				// ProviderCatType provider_cat = node_r;
//
//				nodeType.setNodeName(node_r.getName());
//				// nodeType.set;
//			}
//
//		}
		return null;
	}

	private Object buildNffg() {
		// TODO Auto-generated method stub
		return null;
	}




}
