package it.polito.dp2.NFFG.sol3.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.WebTarget;

import it.polito.dp2.NFFG.sol3.service.jaxb.Nffg;
import it.polito.dp2.NFFG.sol3.service.neo4j.Node;
import it.polito.dp2.NFFG.sol3.service.neo4j.ObjectFactory;
import it.polito.dp2.NFFG.sol3.service.jaxb.LinkType;

import it.polito.dp2.NFFG.sol3.service.jaxb.NodeType;
import it.polito.dp2.NFFG.sol3.service.jaxb.Policy;
import it.polito.dp2.NFFG.sol3.service.jaxb.ReachabilityPolicyType;
import it.polito.dp2.NFFG.sol3.service.jaxb.TraversalPolicyType;

import it.polito.dp2.NFFG.sol3.service.neo4j.Labels;
import it.polito.dp2.NFFG.sol3.service.neo4j.Node;
import it.polito.dp2.NFFG.sol3.service.neo4j.ObjectFactory;
import it.polito.dp2.NFFG.sol3.service.neo4j.Path;
import it.polito.dp2.NFFG.sol3.service.neo4j.Paths;
import it.polito.dp2.NFFG.sol3.service.neo4j.Property;
import it.polito.dp2.NFFG.sol3.service.neo4j.Relationship;

import javax.ws.rs.core.GenericType;
import javax.ws.rs.core.Link;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.UriBuilder;

public class NffgServiceImp { // from negotiation class

	Map <String , Nffg> nffgMap = NffgDB.getMap();

	public void LoadNffg(Nffg nffg) throws Exception{
		
		HashMap<String, String> nodesMap = new HashMap<String, String>(); 
		HashMap<String, String> linksMap = new HashMap<String, String>();
		
			
				
			WebTarget target = createTarget();

			Node nffg_node = new ObjectFactory().createNode();
			Property nffg_property = new ObjectFactory().createProperty();

			nffg_property.setName("name");
			//nffg_property.setValue(nffg.getName());
			nffg_node.getProperty().add(nffg_property);

		//	Node response1 = target.path("resource")
				//	.path("node")
				///	.request(MediaType.APPLICATION_XML)
				//	.post(Entity.entity(node, MediaType.APPLICATION_XML),Node.class)	
		
	}
	public Nffg createNffg(Nffg neg) {
		nffgMap.put(neg.getNffgName(), neg);
		
		
		
		return null;
	}

	public void addPolicy(Policy policy_to_add) {

	}
	
	
	
	public void updatePolicy(Policy policy_to_update) {
	
	}
	
	
	public void deletePolicy(String policyName){

	}

	private WebTarget createTarget() {
		WebTarget target;
		String property_value = System.getProperty("it.polito.dp2.NFFG.lab3.NEO4JURL");

		Client c = ClientBuilder.newClient();
		if (property_value == null)
			property_value = "http://localhost:8080/Neo4JXML/rest";
		target = c.target(property_value);
		return target;
	}

	public List<Nffg> getNffg() {
		// TODO Auto-generated method stub
		return null;
	}



	
}